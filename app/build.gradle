plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'jacoco'
}

jacoco {
    toolVersion = '0.8.7'
}

task {
    useJUnitPlatform()
    jacoco.includeNoLocationClassses = true
}

tasks.withType(Test.class).configureEach {
    it.useJUnitPlatform()
    jacoco {
        excludes = ["*"]
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        html.enabled(true)
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "$buildDir/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = "$projectDir/src/main/java"

    sourceDirectories.from = files([mainSrc])
    classDirectories.from = files([debugTree])
    executionData.from = fileTree(dir: buildDir, includes: [
            'outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec',
            'outputs/code_coverage/debugAndroidTest/connected/Pixel_4_API_31(AVD) - 12/*.ec'
    ])
}

android {
    compileSdkVersion 32
    defaultConfig {
        applicationId 'hsk.practice.myvoca'
        minSdkVersion 27
        targetSdkVersion 32
        versionCode 4
        versionName '2.0.4-alpha01'
        testInstrumentationRunner 'hsk.practice.myvoca.CustomTestRunner'
        signingConfig signingConfigs.debug
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ['room.schemaLocation': "$projectDir/schemas".toString()]
            }
        }
        vectorDrawables {
            useSupportLibrary true
        }
    }
    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
        animationsDisabled true
        unitTests.all {
            jacoco {
                excludes = ['jdk.internal.*']
            }
        }
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules-debug.pro'
        }
        benchmark {
            initWith buildTypes.release
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }
    }
    buildFeatures {
        compose true
    }
    packagingOptions {
        resources {
            excludes += ['/META-INF/{AL2.0,LGPL2.1}', 'META-INF/AL2.0', 'META-INF/LGPL2.1']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += [
                '-Xopt-in=kotlin.RequiresOptIn'
        ]
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    lint {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // mwy3055 library
    implementation 'com.github.mwy3055.hsk-ktx:hsk-ktx:1.0-beta06'

    // Android core
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
    testImplementation "androidx.test:core-ktx:1.4.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestUtil 'androidx.test:orchestrator:1.4.1'

    // For Unit test
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$jupiter_version"
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.robolectric:robolectric:4.8.1'

    // Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    // Tooling support (Previews, etc.)
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    // Foundation (Border, Background, Box, Image, Scroll, shapes, animations, etc.)
    implementation "androidx.compose.foundation:foundation:$compose_version"
    // Material Design
    implementation "androidx.compose.material:material:$compose_version"
    // Material design icons
    implementation "androidx.compose.material:material-icons-core:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"
    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.5.0'
    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.0-alpha01'
    // Integration with observables
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.runtime:runtime-rxjava2:$compose_version"
    // Integration with Hilt
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"
    // UI Tests
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    // Integration with Paging
    implementation 'androidx.paging:paging-compose:1.0.0-alpha15'

    // Accompanist
    implementation "com.google.accompanist:accompanist-placeholder-material:$accompanist_version"
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"
    implementation "com.google.accompanist:accompanist-drawablepainter:$accompanist_version"
    implementation "com.google.accompanist:accompanist-insets-ui:$accompanist_version"

    // Coil for Compose
    implementation 'io.coil-kt:coil-compose:2.1.0'

    // KTX libraries
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.fragment:fragment-ktx:1.5.0'
    implementation 'androidx.collection:collection-ktx:1.2.0'
    implementation "androidx.palette:palette-ktx:1.0.0"

    implementation 'androidx.paging:paging-runtime-ktx:3.1.1'

    implementation "androidx.navigation:navigation-runtime-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-compose:$navigation_version"

    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Profiler
    implementation 'androidx.profileinstaller:profileinstaller:1.2.0-rc01'

    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "android.arch.persistence.room:testing:1.1.1"

    // lifecycles
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation 'androidx.lifecycle:lifecycle-reactivestreams-ktx:2.5.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extension_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation "androidx.datastore:datastore-preferences:$datastore_version"
    implementation "androidx.datastore:datastore:$datastore_version"

    // WorkManager with Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - WorkManager Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    // Preference dependency
    implementation "androidx.preference:preference-ktx:1.2.0"

    // Google Play Services
    implementation 'com.google.android.gms:play-services-auth:20.2.0'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:30.2.0')
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation 'com.orhanobut:logger:2.2.0'

    // Hilt dependency
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    // Hilt and WorkManager integration
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Hilt testing dependency
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

    // Color picker
    implementation 'com.github.QuadFlask:colorpicker:0.0.15'

    // Sealed enum
    implementation "com.github.livefront.sealed-enum:runtime:0.3.0"
    kapt "com.github.livefront.sealed-enum:processor:0.3.0"

    // Gson
    implementation 'com.google.code.gson:gson:2.9.0'

    implementation project(':data')
    implementation project(':domain')
}
repositories {
    google()
    mavenCentral()
}

kapt {
    correctErrorTypes true
}

configurations.all {
    resolutionStrategy {
        eachDependency { details ->
            if ('org.jacoco' == details.requested.group) {
                details.useVersion "0.8.7"
            }
        }
    }
}

// solves Execution failed for task ':app:mapBenchmarkSourceSetPaths'
androidComponents {
    onVariants(selector().all(), {
        def capitalizedVariantName = name.substring(0, 1).toUpperCase() + name.substring(1)
        afterEvaluate {
            tasks.named("map${capitalizedVariantName}SourceSetPaths").configure {
                it.dependsOn("process${capitalizedVariantName}GoogleServices")
            }
        }
    })
}